{"version":3,"sources":["components/tables/random-data.js","components/tables/editable-table.js","components/tables/simple-long-table.js","components/theme.js","components/app-bar.js","components/application.js","index.js"],"names":["chance","Chance","getPersonsRows","how","Array","fill","map","name","nationality","split","firstName","lastName","birthday","string","email","country","full","profession","rank","getPerson","value","editable","css","__height","Table","data","header","path","label","__width","resizable","rows","headerHeight","className","rowNums","getValue","setValue","o","treeSize","theme","createMuiTheme","palette","primary","main","indigo","secondary","amber","makeStyles","formulaire","padding","margin","button","ApplicationBar","useState","menu","setMenu","onOpen","useCallback","onClose","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","Button","Drawer","anchor","open","List","ListItem","ListItemIcon","ListItemText","Divider","Application","ThemeProvider","CssBaseline","Container","component","Paper","elevation","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.3348eb5b.chunk.js","sourcesContent":["import Chance from \"chance\";\n\nconst chance = new Chance();\n\nexport function getPerson() {\n  const name = chance.name({ nationality: \"fr\" });\n  const [firstName, lastName] = name.split(\" \");\n  const birthday = chance.birthday({ string: true });\n  const email = chance.email();\n  const country = chance.country({ full: true });\n  const profession = chance.profession({ rank: true });\n\n  return { firstName, lastName, birthday, email, country, profession };\n}\n\nexport function getPersonsRows(how) {\n  return new Array(how).fill(null).map(function () {\n    const {\n      firstName,\n      lastName,\n      birthday,\n      email,\n      country,\n      profession,\n    } = getPerson();\n    return {\n      firstName: { value: firstName, editable: true },\n      lastName: { value: lastName, editable: true },\n      birthday: { value: birthday, css: [\"align-right\"], editable: true },\n      email: { value: email, css: [\"align-left\"], editable: true },\n      country: { value: country, css: [\"align-left\"], editable: true },\n      profession: { value: profession, css: [\"align-left\"], editable: true },\n      __height: 40,\n    };\n  });\n}\n\nexport function generatePersonData(how) {\n  return {\n    header: [\n      { path: \"firstName\", label: \"Prenom\", __width: 100, resizable: true },\n      { path: \"lastName\", label: \"Nom\", __width: 100, resizable: true },\n      {\n        path: \"birthday\",\n        label: \"Date de naissance\",\n        __width: 150,\n        resizable: true,\n      },\n      { path: \"email\", label: \"Mail\", __width: 200, resizable: true },\n      { path: \"country\", label: \"Pays\", __width: 350, resizable: true },\n      {\n        path: \"profession\",\n        label: \"Profession\",\n        __width: 350,\n        resizable: true,\n      },\n    ],\n    rows: getPersonsRows(how),\n  };\n}\n","import React from \"react\";\nimport { ReactLargeTableEditable } from \"react-scrollable-div\";\nimport { generatePersonData } from \"./random-data\";\nimport \"./excel-theme.scss\";\n\nconst NR_ROWS = 10000;\n\nfunction Table() {\n  return (\n    <ReactLargeTableEditable\n      data={generatePersonData(NR_ROWS)}\n      headerHeight={50}\n      className=\"excel-theme\"\n      rowNums={true}\n      getValue={({ value }) => value}\n      setValue={(o, value) => ({ ...o, value })}\n      treeSize={true}\n    />\n  );\n}\n\nexport default Table;\n","import React from \"react\";\nimport { ReactLargeTable } from \"react-scrollable-div\";\nimport { getPersonsRows } from \"./random-data\";\nimport classnames from \"classnames\";\nimport \"./simple-theme.scss\";\n\nconst persons = {\n  header: [\n    { path: \"firstName\", label: \"Prenom\", __width: 100, resizable: true },\n    { path: \"lastName\", label: \"Nom\", __width: 100, resizable: true },\n    {\n      path: \"birthday\",\n      label: \"Date de naissance\",\n      __width: 150,\n      resizable: true,\n    },\n    {\n      path: \"email\",\n      label: \"Mail\",\n      __width: 200,\n      resizable: true,\n    },\n  ],\n  rows: getPersonsRows(1000),\n};\n\nfunction CellRenderer({ cell }) {\n  const { value, css = [] } = cell;\n  return <div className={classnames(\"simple-theme-cell\", ...css)}>{value}</div>;\n}\n\nfunction Table() {\n  return (\n    <ReactLargeTable\n      data={persons}\n      headerHeight={50}\n      cellRenderer={CellRenderer}\n      className=\"simple-theme\"\n    />\n  );\n}\n\nexport default Table;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: indigo[500],\n    },\n    secondary: {\n      main: amber[500],\n    },\n  },\n});\n\nexport const useStyles = makeStyles((theme) => ({\n  formulaire: { padding: \"10px 24px\", margin: \"10px 30px\" },\n  button: { padding: \"6px\" },\n}));\n\nexport default theme;\n","import React, { useState, useCallback } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport \"./app-bar.scss\";\n\nfunction ApplicationBar() {\n  const [menu, setMenu] = useState(false);\n  const onOpen = useCallback(function () {\n    setMenu(true);\n  }, []);\n  const onClose = useCallback(function () {\n    setMenu(false);\n  }, []);\n\n  return (\n    <>\n      <AppBar position=\"static\" className=\"app-bar\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={onOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">News</Typography>\n          <Button color=\"inherit\" className=\"login\">\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer anchor=\"left\" open={menu} onClose={onClose}>\n        <List className=\"menu-list\">\n          <ListItem button>\n            <ListItemIcon>\n              <MailIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Mail\" />\n          </ListItem>\n        </List>\n        <Divider />\n      </Drawer>\n    </>\n  );\n}\n\nexport default ApplicationBar;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { EditableTable } from \"./tables\";\nimport theme from \"./theme\";\nimport AppBar from \"./app-bar\";\nimport \"./application.scss\";\n\nfunction Application() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar />\n      <Container component=\"div\" className=\"application\">\n        <Paper elevation={3} className=\"paper-table\">\n          <div className=\"table-container\">\n            <EditableTable />\n          </div>\n        </Paper>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Application;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport Application from \"./components\";\n\nReactDom.render(<Application />, document.getElementById(\"root\"));\n"],"sourceRoot":""}